<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

  <context:property-placeholder
    ignore-resource-not-found="true"
    location="classpath*:META-INF/spring/application.properties"/>
  <context:annotation-config />

  <batch:job id="ReIndex">
    <batch:step id="reIndex">
      <batch:description>Re-index some or all of the database</batch:description>
      <!-- 
      todo: adding a task-executor does make things run faster but doesn't fix underlying issues
      with how the data access is structured. it's at least worth trying to fix the underlying issues
      before throwing more threads at the problem.
      -->
      <!-- <batch:tasklet task-executor="poolTaskExecutor"> -->
      <batch:tasklet>
        <batch:chunk reader="itemReader" processor="itemProcessor" writer="itemIndexer" commit-interval="100" />
      </batch:tasklet>
      <batch:next on="COMPLETED" to="optimizeIndex"/>
      <batch:listeners>
        <batch:listener ref="stepStatusListener" />
        <batch:listener ref="chunkPerformanceLoggingListener" />
      </batch:listeners>
    </batch:step>

    <batch:step id="optimizeIndex">
      <batch:description>Optimize the solr index</batch:description>
      <batch:tasklet ref="solrOptimizingTasklet" />
      <batch:next on="COMPLETED" to="indexNamesSuggester" />
      <batch:listeners>
        <batch:listener ref="chunkPerformanceLoggingListener" />
      </batch:listeners>
    </batch:step>

    <batch:step id="indexNamesSuggester">
      <batch:description>Build the scientific-name suggester index</batch:description>
      <batch:tasklet ref="nameSuggesterIndexingTasklet" />
      <batch:next on="COMPLETED" to="indexCommonNamesSuggester" />
      <batch:listeners>
        <batch:listener ref="chunkPerformanceLoggingListener" />
      </batch:listeners>
    </batch:step>

    <batch:step id="indexCommonNamesSuggester">
      <batch:description>Build the common-name suggester index</batch:description>
      <batch:tasklet ref="commonNameSuggesterIndexingTasklet" />
      <batch:next on="COMPLETED" to="indexDescriptionSuggester" />
      <batch:listeners>
        <batch:listener ref="chunkPerformanceLoggingListener" />
      </batch:listeners>
    </batch:step>

    <batch:step id="indexDescriptionSuggester">
      <batch:description>Build the characteristic suggester index</batch:description>
      <batch:tasklet ref="descriptionSuggesterIndexingTasklet" />
      <batch:end on="COMPLETED"/>
      <batch:listeners>
        <batch:listener ref="chunkPerformanceLoggingListener" />
      </batch:listeners>
    </batch:step>

    <batch:listeners>
      <batch:listener ref="compositeJobListener" />
      <batch:listener ref="jobSequenceListener" />
    </batch:listeners>
  </batch:job>

  <bean id="itemReader" class="org.springframework.batch.item.database.HibernatePagingItemReader" scope="step">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="saveState" value="false"></property>
    <property name="useStatelessSession" value="false"></property>
    <property name="queryString" value="select t.id from Taxon t" />
    
    <!-- 
    todo: if we don't end up needing the full queryProvider specified above, it might be worth just using the queryString
    below. the main difference from before is that it used to be "select t.id from Taxon t" and then loading of the entity
    would happen in the writer. I think this is because it's such a pain to get entities loaded properly, but if we can
    get an ItemProcessor doing the conversion from T -> SolrInputDocument then I think we'd be OK.
    -->
    <!-- <property name="queryProvider" ref="reindexQueryProvider"></property> -->
    <!-- <property name="queryString" value="from Taxon t join fetch t.authority join fetch t.authorities" /> -->
    <!-- <property name="queryString" value="select t.id, i.id, i.title, i.accessUri from Taxon as t join fetch t.images as i" /> -->
    <!-- <property name="queryString" value="#{jobParameters['query.string']}" /> -->
  </bean>
  
  <bean id="jpaItemReader" class="org.springframework.batch.item.database.JpaPagingItemReader" scope="step">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
    <property name="saveState" value="false"></property>
    <property name="queryProvider" ref="reindexJpaQueryProvider"></property>
  </bean>

  <bean id="itemProcessor" class="org.powo.harvest.common.TaxonIdToLoadedTaxonProcessor" scope="step">
    <property name="taxonService" ref="taxonServiceImpl" />
  </bean>

  <bean id="itemIndexer" class="org.powo.harvest.common.SolrIndexingWriter" scope="step">
    <property name="type" value="#{jobParameters['query.type']}" />
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="solrIndexingInterceptor" ref="solrIndexingInterceptor" />
  </bean>

  <bean id="solrDocumentItemReader" class="org.powo.harvest.common.SolrDocumentItemReader" scope="step">
    <property name="searchableObjectService" ref="searchableObjectServiceImpl" />
    <property name="queryString" value="#{jobParameters['solr.query.string']}" />
    <property name="sort" value="#{jobParameters['solr.sort']}" />
    <property name="selectedFacets" value="#{jobParameters['solr.selectedFacets']}" />
  </bean>

  <bean id="nameSuggesterIndexingTasklet" class="org.powo.harvest.common.SolrSuggesterIndexingTasklet">
    <property name="solrClient" ref="solrClient" />
    <property name="suggester" value="scientific-name" />
  </bean>

  <bean id="commonNameSuggesterIndexingTasklet" class="org.powo.harvest.common.SolrSuggesterIndexingTasklet">
    <property name="solrClient" ref="solrClient" />
    <property name="suggester" value="common-name" />
  </bean>

  <bean id="descriptionSuggesterIndexingTasklet" class="org.powo.harvest.common.SolrSuggesterIndexingTasklet">
    <property name="solrClient" ref="solrClient" />
    <property name="suggester" value="characteristic" />
  </bean>

  <bean id="solrOptimizingTasklet" class="org.powo.harvest.common.SolrOptimizingTasklet">
    <property name="core" value="${solr.core}"/>
    <property name="solrClient" ref="solrClient"/>
  </bean>
</beans>