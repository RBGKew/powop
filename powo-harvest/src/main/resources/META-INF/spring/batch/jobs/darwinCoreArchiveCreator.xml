<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <context:property-placeholder
      ignore-resource-not-found="true"
      location="classpath*:META-INF/spring/application.properties"/>

  <context:annotation-config />

  <batch:step id="produceCoreFile">
    <batch:description>Produce a download file</batch:description>
    <batch:tasklet>
      <batch:chunk reader="downloadItemsReader" processor="nullLicenseTaxonFilter" writer="downloadFileWriter" commit-interval="10"/>
      <batch:listeners>
        <batch:listener ref="stepStatusListener" />
      </batch:listeners>
    </batch:tasklet>
  </batch:step>

  <batch:step id="produceOneToManyFile">
    <batch:description>Produce a download file</batch:description>
    <batch:tasklet>
      <batch:chunk reader="downloadItemsReader" writer="downloadOneToManyFileWriter" commit-interval="10"/>
      <batch:listeners>
        <batch:listener ref="stepStatusListener" />
      </batch:listeners>
    </batch:tasklet>
  </batch:step>

  <batch:step id="produceManyToManyFile">
    <batch:description>Produce a download file</batch:description>
    <batch:tasklet>
      <batch:chunk reader="downloadItemsReader" writer="downloadManyToManyFileWriter" commit-interval="10"/>
      <batch:listeners>
        <batch:listener ref="stepStatusListener" />
      </batch:listeners>
    </batch:tasklet>
  </batch:step>

  <batch:job id="DarwinCoreArchiveCreation">
    <batch:description>Download a Darwin Core Archive</batch:description>
    <batch:decision decider="produceTaxonFileDecider" id="checkTaxonFile">
      <batch:next on="true" to="createTaxonFile"/>
      <batch:next on="false" to="checkDescriptionFile"/>
    </batch:decision>
    <batch:step id="createTaxonFile" parent="produceCoreFile">
      <batch:description>Create the Taxon (core) file</batch:description>
      <batch:next on="COMPLETED" to="checkDescriptionFile"/>
    </batch:step>
    <batch:decision decider="produceDescriptionFileDecider" id="checkDescriptionFile">
      <batch:next on="true" to="createDescriptionFile"/>
      <batch:next on="false" to="checkDistributionFile"/>
    </batch:decision>
    <batch:step id="createDescriptionFile" parent="produceOneToManyFile">
      <batch:description>Create the Description (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkDistributionFile"/>
    </batch:step>
    <batch:decision decider="produceDistributionFileDecider" id="checkDistributionFile">
      <batch:next on="true" to="createDistributionFile"/>
      <batch:next on="false" to="checkVernacularNameFile"/>
    </batch:decision>
    <batch:step id="createDistributionFile" parent="produceOneToManyFile">
      <batch:description>Create the Distribution (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkVernacularNameFile"/>
    </batch:step>
    <batch:decision decider="produceVernacularNameFileDecider" id="checkVernacularNameFile">
      <batch:next on="true" to="createVernacularNameFile"/>
      <batch:next on="false" to="checkIdentifierFile"/>
    </batch:decision>
    <batch:step id="createVernacularNameFile" parent="produceOneToManyFile">
      <batch:description>Create the Vernacular Name (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkIdentifierFile"/>
    </batch:step>
    <batch:decision decider="produceIdentifierFileDecider" id="checkIdentifierFile">
      <batch:next on="true" to="createIdentifierFile"/>
      <batch:next on="false" to="checkMeasurementOrFactFile"/>
    </batch:decision>
    <batch:step id="createIdentifierFile" parent="produceOneToManyFile">
      <batch:description>Create the Identifier (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkMeasurementOrFactFile"/>
    </batch:step>
    <batch:decision decider="produceMeasurementOrFactFileDecider" id="checkMeasurementOrFactFile">
      <batch:next on="true" to="createMeasurementOrFactFile"/>
      <batch:next on="false" to="checkImageFile"/>
    </batch:decision>
    <batch:step id="createMeasurementOrFactFile" parent="produceOneToManyFile">
      <batch:description>Create the Measurement Or Fact (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkImageFile"/>
    </batch:step>
    <batch:decision decider="produceImageFileDecider" id="checkImageFile">
      <batch:next on="true" to="createImageFile"/>
      <batch:next on="false" to="checkReferenceFile"/>
    </batch:decision>
    <batch:step id="createImageFile" parent="produceManyToManyFile">
      <batch:description>Create the Image (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkReferenceFile"/>
    </batch:step>
    <batch:decision decider="produceReferenceFileDecider" id="checkReferenceFile">
      <batch:next on="true" to="createReferenceFile"/>
      <batch:next on="false" to="checkTypeAndSpecimenFile"/>
    </batch:decision>
    <batch:step id="createReferenceFile" parent="produceManyToManyFile">
      <batch:description>Create the Reference (extension) file</batch:description>
      <batch:next on="COMPLETED" to="checkTypeAndSpecimenFile"/>
    </batch:step>
    <batch:decision decider="produceTypeAndSpecimenFileDecider" id="checkTypeAndSpecimenFile">
      <batch:next on="true" to="createTypeAndSpecimenFile"/>
      <batch:next on="false" to="createMetadataFile"/>
    </batch:decision>
    <batch:step id="createTypeAndSpecimenFile" parent="produceManyToManyFile">
      <batch:description>Create the Type and Specimen (extension) file</batch:description>
      <batch:next on="COMPLETED" to="createMetadataFile"/>
    </batch:step>
    <batch:step id="createMetadataFile">
      <batch:description>Create the Metadata file</batch:description>
      <batch:tasklet ref="writeMetadataTasklet"/>
      <batch:next on="COMPLETED" to="packageArchive"/>
    </batch:step>
    <batch:step id="packageArchive">
      <batch:description>Package the archive up</batch:description>
      <batch:tasklet ref="packageArchiveTasklet"/>
      <batch:next on="COMPLETED" to="cleanupResources"/>
    </batch:step>
    <batch:step id="cleanupResources">
      <batch:description>Cleanup the resources</batch:description>
      <batch:tasklet ref="workingDirectoryResourceDeletingTasklet" />
      <batch:end on="COMPLETED"/>
      <batch:listeners>
        <batch:listener ref="stepStatusListener" />
      </batch:listeners>
    </batch:step>
    <batch:listeners>
      <batch:listener ref="jobStatusListener" />
    </batch:listeners>
  </batch:job>

  <bean id="writeMetadataTasklet" class="org.emonocot.job.dwc.write.ArchiveMetadataWriter" scope="step">
    <property name="archiveFile" value="#{jobParameters['download.file']}"/>
    <property name="taxonFields" value="#{jobParameters['download.taxon']}"/>
    <property name="descriptionFields" value="#{jobParameters['download.description']}"/>
    <property name="distributionFields" value="#{jobParameters['download.distribution']}"/>
    <property name="measurementOrFactFields" value="#{jobParameters['download.measurementOrFact']}"/>
    <property name="vernacularNameFields" value="#{jobParameters['download.vernacularName']}"/>
    <property name="identifierFields" value="#{jobParameters['download.identifier']}"/>
    <property name="imageFields" value="#{jobParameters['download.image']}"/>
    <property name="referenceFields" value="#{jobParameters['download.reference']}"/>
    <property name="typeAndSpecimenFields" value="#{jobParameters['download.typeAndSpecimen']}"/>
    <property name="delimiter" value="#{jobParameters['download.fieldsTerminatedBy']}"/>
    <property name="quoteCharacter" value="#{jobParameters['download.fieldsEnclosedBy']}"/>
    <property name="ignoreHeaderLines" value="1"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
    <property name="citationString" value="${download.citation.string}"/>
    <property name="creatorEmail" value="${download.creator.email}"/>
    <property name="creatorName" value="${download.creator.name}"/>
    <property name="description" value="${download.meta.description}"/>
    <property name="homepageUrl" value="${download.homepage.url}"/>
    <property name="identifier" value="${download.identifier}"/>
    <property name="logoUrl" value="${download.logo.url}"/>
    <property name="publisherEmail" value="${download.publisher.email}"/>
    <property name="publisherName" value="${download.publisher.name}"/>
    <property name="rights" value="${download.rights}"/>
    <property name="subject" value="${download.subject}"/>
    <property name="title" value="${download.title}"/>
  </bean>

  <bean id="packageArchiveTasklet" class="org.emonocot.job.dwc.write.ArchivePackager" scope="step">
    <property name="archiveFile" value="#{jobParameters['download.file']}"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
    <property name="descriptionFields" value="#{jobParameters['download.description']}"/>
    <property name="distributionFields" value="#{jobParameters['download.distribution']}"/>
    <property name="measurementOrFactFields" value="#{jobParameters['download.measurementOrFact']}"/>
    <property name="vernacularNameFields" value="#{jobParameters['download.vernacularName']}"/>
    <property name="identifierFields" value="#{jobParameters['download.identifier']}"/>
    <property name="imageFields" value="#{jobParameters['download.image']}"/>
    <property name="referenceFields" value="#{jobParameters['download.reference']}"/>
    <property name="typeAndSpecimenFields" value="#{jobParameters['download.typeAndSpecimen']}"/>
  </bean>

  <bean id="produceTaxonFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.taxon"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceDescriptionFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.description"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceDistributionFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.distribution"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceVernacularNameFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.vernacularName"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceIdentifierFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.identifier"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceMeasurementOrFactFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.measurementOrFact"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceReferenceFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.reference"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceImageFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.image"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="produceTypeAndSpecimenFileDecider" class="org.emonocot.job.dwc.write.ExposeParametersDecider">
    <property name="jobParameterName" value="download.typeAndSpecimen"/>
    <property name="outputDirectory" value="${harvester.output.directory}"/>
  </bean>

  <bean id="downloadOneToManyFileWriter" class="org.emonocot.job.dwc.write.OneToManyWriter" scope="step">
    <property name="resource" ref="downloadFile"/>
    <property name="lineAggregator" ref="lineAggregator"/>
    <property name="type" value="#{jobExecutionContext['download.type']}"/>
    <property name="headerCallback" ref="dwcHeaderWriter"/>
  </bean>

  <bean id="downloadManyToManyFileWriter" class="org.emonocot.job.dwc.write.ManyToManyWriter" scope="step">
    <property name="resource" ref="downloadFile"/>
    <property name="lineAggregator" ref="lineAggregator"/>
    <property name="type" value="#{jobExecutionContext['download.type']}"/>
    <property name="headerCallback" ref="dwcHeaderWriter"/>
  </bean>

  <bean id="downloadItemsReader" class="org.emonocot.harvest.common.SolrItemReader" scope="step">
    <property name="service" ref="searchableObjectServiceImpl" />
    <property name="pageSize" value="10"/>
    <property name="maxItemCount" value="#{jobParameters['download.limit']}"/>
    <property name="spatialString" value="#{jobParameters['download.spatial']}"/>
    <property name="queryString" value="#{jobParameters['download.query']}"/>
    <property name="sort" value="#{jobParameters['download.sort']}"/>
    <property name="selectedFacets" value="#{jobParameters['download.selectedFacets']}"/>
  </bean>

  <bean id="nullLicenseTaxonFilter" class="org.emonocot.job.dwc.write.NullLicenseTaxonFilter"/>

  <bean id="downloadFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
    <property name="resource" ref="downloadFile"/>
    <property name="lineAggregator" ref="lineAggregator"/>
    <property name="headerCallback" ref="dwcHeaderWriter"/>
  </bean>

  <bean id="dwcHeaderWriter" class="org.emonocot.job.dwc.write.DwcHeaderWriter" scope="step">
    <property name="header" value="#{jobExecutionContext['download.fields']}"/>
    <property name="delimiter" value="#{jobParameters['download.fieldsTerminatedBy']}"/>
  </bean>

  <bean id="downloadFile" class="org.springframework.core.io.FileSystemResource" scope="step">
    <constructor-arg value="#{jobExecutionContext['download.file']}" />
  </bean>

  <bean name="lineAggregator" class="org.springframework.batch.item.file.transform.DelimitedLineAggregator" scope="step">
    <property name="delimiter" value="#{jobParameters['download.fieldsTerminatedBy']}"/>
    <property name="fieldExtractor">
      <bean class="org.emonocot.job.dwc.write.DwcFieldExtractor" scope="step">
        <property name="names" value="#{jobExecutionContext['download.fields']}"/>
        <property name="extension" value="#{jobExecutionContext['download.extension']}"/>
        <property name="conversionService" ref="conversionService"/>
        <property name="quoteCharacter" value="#{jobParameters['download.fieldsEnclosedBy']}"/>
      </bean>
    </property>
  </bean>

  <bean id="workingDirectoryResourceDeletingTasklet"
    class="org.emonocot.harvest.common.MultiResourceDeletingTasklet"
    scope="step">
    <property name="resources">
      <list>
        <bean class="org.springframework.core.io.FileSystemResource" scope="step">
          <constructor-arg value="#{jobExecutionContext['working.directory']}" />
        </bean>
      </list>
    </property>
  </bean>
</beans>
