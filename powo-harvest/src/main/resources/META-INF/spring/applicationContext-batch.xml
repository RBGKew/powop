<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:task="http://www.springframework.org/schema/task"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <context:annotation-config />

  <bean class="org.springframework.batch.core.scope.StepScope" />

  <bean id="bufferedReaderFactory" class="org.emonocot.harvest.common.BOMIgnoringBufferedReaderFactory"/>

  <!-- Read write job launcher which runs the job in the current thread meaning
    : that the jms poller will block until the job completes -->

  <!-- bean id="synchronousJobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository" />
  </bean-->

  <bean id="asynchronousJobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository" />
    <property name="taskExecutor" ref="poolTaskExecutor" />
  </bean>

  <task:executor id="poolTaskExecutor" pool-size="600" rejection-policy="CALLER_RUNS"/>

  <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="transactionManager" ref="transactionManager"/>
  </bean>

  <bean id="jobExplorer"
    class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="jobLoader" class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
    <property name="applicationContextFactories">
      <bean class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
        <property name="resources" value="classpath*:/META-INF/spring/batch/jobs/*.xml" />
      </bean>
    </property>
    <property name="jobLoader">
      <bean class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
        <property name="jobRegistry" ref="jobRegistry" />
      </bean>
    </property>
  </bean>

  <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

  <bean id="stepStatusListener" class="org.emonocot.harvest.common.StepStatusListener"/>

  <bean id="compositeJobListener" class="org.emonocot.harvest.common.CompositeJobStatusListener">
    <property name="jobListeners">
      <list>
        <ref bean="notifyingJobStatusListener"/>
        <ref bean="jobStatusListener"/>
      </list>
    </property>
  </bean>

  <bean id="jobStatusListener" class="org.emonocot.harvest.common.JobStatusListener">
    <property name="jobStatusNotifier" ref="jobStatusNotifier"/>
  </bean>

  <bean id="jobStatusNotifier" class="org.emonocot.harvest.common.JobStatusNotifierImpl"/>
</beans>
