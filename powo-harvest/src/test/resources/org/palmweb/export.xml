<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
     <changeSet author="ben" id="2011-12-20_01">
        <comment>Some of the taxa don't have identifiers but the names do, so add those</comment>
        <sql>
            update taxonbase as taxon join taxonnamebase as name on (taxon.name_id = name.id) left join originalsourcebase as source on (name.id = source.sourcedObj_id AND source.sourcedObj_type = 'eu.etaxonomy.cdm.model.name.BotanicalName') set taxon.lsid_lsid = if(source.idinsource IS NULL, NULL, concat('urn:kew.org:wcs:taxon:',substr(source.idinsource,9)));
        </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_02">
        <comment>Now add the identifiers from the taxon concepts themselves</comment>
        <sql>
            update taxonbase as taxon join originalsourcebase as source on (taxon.id = source.sourcedObj_id AND source.sourcedObj_type = 'eu.etaxonomy.cdm.model.taxon.Taxon') set taxon.lsid_lsid = if(source.idinsource IS NULL, NULL, concat('urn:kew.org:wcs:taxon:',substr(source.idinsource,9))) where taxon.lsid_lsid is NULL;
        </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_03">
        <comment>Produce the checklist output</comment>
        <sql>
            select IFNULL(taxon.lsid_lsid,''), IFNULL(name.nameCache,''), IFNULL(name.authorshipCache,''), IFNULL(lower(rank.titleCache),''), IF(taxon.DTYPE = 'Taxon', 'Accepted','Synonym'), IFNULL(accepted.lsid_lsid,''), IFNULL(name.genusOrUninomial,''), IFNULL(name.infraGenericEpithet,''), IFNULL(name.specificEpithet,''), IFNULL(name.infraSpecificEpithet,''), concat('http://www.palmweb.org/?q=cdm_dataportal/taxon/',taxon.uuid) AS source, IF(taxon.updated is NULL, DATE_FORMAT(taxon.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(taxon.updated,"%Y-%m-%dT%TZ")) as updated,DATE_FORMAT(taxon.created,"%Y-%m-%dT%TZ") as created,IFNULL(parent.lsid_lsid,'') as parent_id, IFNULL(IF(name.nomenclaturalmicroreference IS NULL,reference.titleCache,concat(reference.titleCache," ", name.nomenclaturalmicroreference)),'') as citation, IFNULL(IF(reference.uuid IS NULL,NULL,concat('http://www.palmweb.org/q=cdm_dataportal/reference/',reference.uuid)),'') as citationId, if(status.type_id IS NULL,'', IF(status.type_id=848,'illegitimum',IF(status.type_id=834,'invalidum',IF(status.type_id=831,'provisorium',IF(status.type_id=833,'nudum','subnudum'))))) as status into outfile '/tmp/taxon.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n'  from taxonbase as taxon join taxonnamebase as name on (taxon.name_id = name.id) join DefinedTermBase as rank on (name.rank_id = rank.id)  left join synonymrelationship on (taxon.id = synonymrelationship.relatedfrom_id) left join taxonbase as accepted on (accepted.id = synonymrelationship.relatedto_id) left join taxonnode as node on (taxon.id = node.taxon_id) left join taxonnode as parentnode on (node.parent_id = parentnode.id) left join taxonbase as parent on (parentnode.taxon_id = parent.id) join reference on (name.nomenclaturalreference_id = reference.id) left join taxonnamebase_nomenclaturalstatus as name_status on (name.id = name_status.TaxonNameBase_id) left join nomenclaturalstatus as status on (name_status.status_id = status.id);
        </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_04">
        <comment>Create a temporary table for the descriptions</comment>
        <sql>
            create temporary table description select element.id as id, IFNULL(taxon.lsid_lsid,'') AS lsid, CASE feature_id WHEN 937 THEN 'morphology' WHEN 936 THEN 'biology' WHEN 924 THEN 'vernacular' WHEN 945 THEN 'conservation' WHEN 934 THEN 'general' WHEN 929 THEN 'diagnostic' WHEN  940 THEN 'distribution' WHEN 2075 THEN 'habitat' WHEN 925 THEN 'use' END as type, concat('http://www.palmweb.org/?q=cdm_dataportal/descriptionelement/',element.uuid) AS identifier, concat('http://www.palmweb.org/?q=cdm_dataportal/taxon/',taxon.uuid) AS source, IF(element.updated is NULL, DATE_FORMAT(element.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(element.updated,"%Y-%m-%dT%TZ")) as updated, DATE_FORMAT(element.created,"%Y-%m-%dT%TZ") as created, IFNULL(user.username,'') as creator, "CC BY-NC-SA 3.0" as license, "EN" as language, REPLACE(REPLACE(IFNULL(string.text,''),'\r\n','\n'),'\n',' ') as text, IFNULL(IF(source.citationMicroReference IS NULL,reference.titleCache,concat(reference.titleCache,' ',source.citationMicroReference)),'') as citation, IFNULL(IF(reference.uuid IS NULL,NULL,concat('http://www.palmweb.org/?q=cdm_dataportal/reference/',reference.uuid)),'') as citationId from descriptionelementbase as element join descriptionbase as description on (element.indescription_id = description.id) join taxonbase as taxon on (description.taxon_id = taxon.id) left join useraccount as user on (user.id = element.createdBy_id) join descriptionelementbase_languagestring as deb_ls on (element.id = deb_ls.DescriptionElementBase_id) join languagestring as string on (deb_ls.multilanguagetext_id = string.id) left join originalsourcebase as source on (element.id = source.sourcedObj_id AND source.sourcedObj_type = "eu.etaxonomy.cdm.model.description.TextData") left join Reference as reference on (source.citation_id = reference.id) where feature_id in (937,924,936,945,934,929,940,2075,925);
            select lsid, type, identifier, updated, created, creator,text,source, group_concat(citationId,",") INTO OUTFILE '/tmp/description.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from description group by id;
        </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_07">
        <comment>Export the images</comment>
        <sql>
            create temporary table species select taxon.id as parent, child.taxon_id as child from TaxonBase as taxon join TaxonNameBase as name on (taxon.name_id = name.id) join TaxonNode parent on (taxon.id = parent.taxon_id) join TaxonNode as child on (parent.id = child.parent_id) where name.rank_id = 775 and taxon.DTYPE = 'Taxon';
            select id, url, title, artist, updated, created INTO OUTFILE '/tmp/images.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' FROM
            (select IFNULL(taxon.lsid_lsid,'') as id, IFNULL(part.uri,'') as url, IFNULL(media.titleCache,'') as title, IFNULL(agent.titleCache,'') as artist, IFNULL(IF(media.updated is NULL, DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(media.updated,"%Y-%m-%dT%TZ")),'') as updated, IFNULL(DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),'') as created, mimetype as mimetype from media  join mediarepresentation as rep on (media.id = rep.media_id) join mediarepresentationpart as part on (rep.id = part.representation_id) left join media_rights on (media.id = media_rights.Media_id) left join rights on (media_rights.rights_id = rights.id) left join agentbase as agent on (rights.agent_id = Agent.id) join descriptionelementbase_media as deb_media on (media.id = deb_media.media_id) join descriptionelementbase as element on(element.id = deb_media.DescriptionElementBase_id) join DescriptionBase as description on (element.indescription_id = description.id) join species on (description.taxon_id = species.child) join taxonbase as taxon on (species.parent = taxon.id)
            union
            select IFNULL(taxon.lsid_lsid,'') as id, IFNULL(part.uri,'') as url, IFNULL(media.titleCache,'') as title, IFNULL(agent.titleCache,'') as artist, IFNULL(IF(media.updated is NULL, DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(media.updated,"%Y-%m-%dT%TZ")),'') as updated, IFNULL(DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),'') as created, mimetype as mimetype  from media join mediarepresentation as rep on (media.id = rep.media_id) join mediarepresentationpart as part on (rep.id = part.representation_id)left join media_rights on (media.id = media_rights.Media_id) left join rights on (media_rights.rights_id = rights.id) left join AgentBase as agent on (rights.agent_id = Agent.id) left join descriptionelementbase_media as deb_media on (media.id = deb_media.media_id) left join descriptionelementbase as element on (element.id = deb_media.DescriptionElementBase_id) left join DescriptionBase as description on (element.indescription_id = description.id) left join taxonbase as taxon on (description.taxon_id = taxon.id)) as images where (mimetype = 'image/jpeg' and length(url) > 0);
        </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_08">
        <comment>Export the references</comment>
        <sql>
            select IFNULL(taxon.lsid_lsid,'') as id, IF(ref.updated is NULL, DATE_FORMAT(ref.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(ref.updated,"%Y-%m-%dT%TZ")) as updated, DATE_FORMAT(ref.created,"%Y-%m-%dT%TZ") as created, IFNULL(IF(ref.uuid IS NULL,NULL,concat('http://www.palmweb.org/?q=cdm_dataportal/reference/',ref.uuid)),'') as identifier, ifnull(ref.titleCache,'') as bibliographicCitation, 'publication' as type, ifnull(ref.title,'') as title, REPLACE(REPLACE(IFNULL(ref.referenceAbstract,''),'\r\n','\n'),'\n',' ') as abstract, ifnull(substr(ref.datepublished_start,1,4),'') as date,ifnull(inref.title,'') as source, ifnull(authors.titleCache,'') as creator INTO OUTFILE '/tmp/reference.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from reference as ref left join reference as inref on (ref.inreference_id= inref.id) join agentbase as authors on (ref.authorTeam_id = authors.id) join originalsourcebase as source on (source.citation_id = ref.id) join descriptionelementbase as element on (source.sourcedObj_id = element.id and source.sourcedObj_type = 'eu.etaxonomy.cdm.model.description.TextData') join descriptionbase as description on (element.indescription_id = description.id) join taxonbase as taxon on (taxon.id = description.taxon_id) where element.feature_id in (937,936,924,945,934,929,940,2075,925);
        </sql>
    </changeSet>
    <changeSet author="ben" id="2012-02-20_01">
        <comment>Export the protologue links</comment>
        <sql>
            select IFNULL(taxon.lsid_lsid,'') as id, IF(media.updated is NULL, DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(media.updated,"%Y-%m-%dT%TZ")) as updated, DATE_FORMAT(media.created,"%Y-%m-%dT%TZ") as created, uri as identifier, 'Protolog' as subject, 'application/pdf', concat(name.titleCache,' Protolog') INTO OUTFILE '/tmp/identifiers.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from TaxonBase as taxon join TaxonNameBase as name on (taxon.name_id = name.id) join DescriptionBase on (name.id = DescriptionBase.TaxonName_id) join DescriptionElementBase on (DescriptionBase.id = DescriptionElementBase.inDescription_id)  join DescriptionElementBase_Media on (DescriptionElementBase.id = DescriptionElementBase_Media.DescriptionElementBase_id) join Media on (DescriptionElementBase_Media.media_id = Media.id) join MediaRepresentation on (Media.id = MediaRepresentation.media_id) join MediaRepresentationPart on (MediaRepresentation.id = MediaRepresentationPart.representation_id) where uri like  "%pdf" group by uri;
        </sql>
    </changeSet>
</databaseChangeLog>
