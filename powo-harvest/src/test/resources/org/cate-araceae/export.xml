<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
     <changeSet author="ben" id="2011-10-19_01">
        <createTable tableName="matches">
            <column name="originalIdentifier" type="VARCHAR(80)">
              <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)"/>
            <column name="status" type="VARCHAR(36)"/>
            <column name="numberOfMatches" type="VARCHAR(36)"/>
            <column name="interpretedAs" type="VARCHAR(255)"/>
            <column name="matchedIdentifier" type="VARCHAR(36)"/>       
        </createTable>
    </changeSet>
    <changeSet author="ben" id="2011-10-19_02">
      <loadData tableName="matches" file="src/test/resources/org/cate-araceae/matches.csv">
        <column name="originalIdentifier" index="0" type="STRING"/>
        <column name="name" index="1" type="STRING"/>
        <column name="status" index="2" type="STRING"/>
        <column name="numberOfMatches" index="3" type="STRING"/>
        <column name="interpretedAs" index="4" type="STRING"/>
        <column name="matchedIdentifier" index="5" type="STRING"/>    
      </loadData>
    </changeSet>
    <changeSet author="ben" id="2011-10-19_03">
      <sql>
        update taxonbase as taxon left join matches as m on (taxon.lsid_lsid = m.originalIdentifier) set taxon.lsid_lsid =  if(matchedIdentifier IS NULL, NULL, matchedIdentifier);
      </sql>
    </changeSet>
    <changeSet author="ben" id="2011-10-19_04">
      <sql>
        select IFNULL(taxon.lsid_lsid,''), IFNULL(name.nameCache,''), IFNULL(name.authorshipCache,''), IFNULL(lower(rank.titleCache),''), IF(taxon.DTYPE = 'Taxon', 'Accepted','Synonym'), IFNULL(accepted.lsid_lsid,''), IFNULL(name.genusOrUninomial,''), IFNULL(name.infraGenericEpithet,''), IFNULL(name.specificEpithet,''), IFNULL(name.infraSpecificEpithet,''), concat('http://www.cate-araceae.org/taxon/',taxon.uuid) AS source, IF(taxon.updated is NULL, DATE_FORMAT(taxon.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(taxon.updated,"%Y-%m-%dT%TZ")) as updated,DATE_FORMAT(taxon.created,"%Y-%m-%dT%TZ") as created,IFNULL(parent.lsid_lsid,'') as parent_id, IFNULL(IF(name.nomenclaturalmicroreference IS NULL,reference.titleCache,concat(reference.titleCache," ", name.nomenclaturalmicroreference)),'') as citation, IFNULL(IF(reference.uuid IS NULL,NULL,concat('http://www.cate-araceae.org/reference/',reference.uuid)),'') as citationId, if(status.type_id IS NULL,'', IF(status.type_id=1963,'illegitimum',IF(status.type_id=1960,'invalidum',IF(status.type_id=1947,'provisorium',IF(status.type_id=1952,'nudum',''))))) as status into outfile '/var/tmp/taxon.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n'  from taxonbase as taxon join taxonnamebase as name on (taxon.taxonName_fk = name.id) join DefinedTermBase as rank on (name.rank_id = rank.id)  left join synonymrelationship on (taxon.id = synonymrelationship.relatedfrom_id) left join taxonbase as accepted on (accepted.id = synonymrelationship.relatedto_id) left join taxonrelationship on (taxon.id = taxonrelationship.relatedfrom_id) left join taxonbase as parent on (parent.id = taxonrelationship.relatedto_id) join reference on (name.nomenclaturalreference_id = reference.id) left join taxonnamebase_nomenclaturalstatus as name_status on (name.id = name_status.TaxonNameBase_id) left join nomenclaturalstatus as status on (name_status.status_id = status.id);
      </sql>
    </changeSet>
    <changeSet author="ben" id="2011-10-19_05">
      <sql>
        create temporary table description select element.id as id, concat('http://cate-araceae.org/descriptionelement/',element.uuid) as identifier, IFNULL(taxon.lsid_lsid,'') AS lsid, CASE feature_id WHEN 1544 THEN 'cyclicity' WHEN 1536 THEN 'vernacular' WHEN 1541 THEN 'conservation' WHEN 1545 THEN 'general' WHEN 1547 THEN 'diagnostic' WHEN  1549 THEN 'distribution' WHEN 1546 THEN 'habitat' WHEN 1538 THEN 'use' END as type, concat('http://www.cate-araceae.org/description/',description.uuid) AS source, IF(element.updated is NULL, DATE_FORMAT(element.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(element.updated,"%Y-%m-%dT%TZ")) as updated, DATE_FORMAT(element.created,"%Y-%m-%dT%TZ") as created, IFNULL(user.emailaddress,'') as creator, "CC BY-NC-SA 3.0" as license, "EN" as language, REPLACE(REPLACE(REPLACE(IFNULL(string.text,''),'\r\n','\n'),'\n',' '),'\t',' ') as text, IFNULL(IF(source.citationMicroReference IS NULL,reference.titleCache,concat(reference.titleCache,' ',source.citationMicroReference)),'') as citation, IFNULL(IF(reference.uuid IS NULL,NULL,concat('http://www.cate-araceae.org/reference/',reference.uuid)),'') as citationId from descriptionelementbase as element join descriptionbase as description on (element.indescription_id = description.id) join taxonbase as taxon on (description.taxon_fk = taxon.id) left join useraccount as user on (user.id = element.createdBy_id) join descriptionelementbase_languagestring as deb_ls on (element.id = deb_ls.DescriptionElementBase_id) join languagestring as string on (deb_ls.multilanguagetext_id = string.id and string.language_id = 116) left join originalsourcebase as source on (element.id = source.sourcedObj_id AND source.sourcedObj_type = "eu.etaxonomy.cdm.model.description.TextData") left join Reference as reference on (source.citation_id = reference.id) where element.DTYPE = 'TextData' and feature_id in (1544, 1536, 1541, 1545, 1547, 1549, 1546, 1538);
        select lsid, identifier, type, identifier, updated, created, creator,text, group_concat(citationId,",") INTO OUTFILE '/var/tmp/description.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from description group by id;
      </sql>
    </changeSet>
    <changeSet author="ben" id="2011-10-19_06">
      <sql>
        select IFNULL(taxon.lsid_lsid,''), CONCAT('http://build.e-monocot.org/cate-araceae/',substring_index(uri,'.',1),'.jpg'), REPLACE(REPLACE(IFNULL(media.titleCache,''),'\r\n','\n'),'\n',' '), IFNULL(artist.titleCache,''), IFNULL(IF(media.updated is NULL, DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(media.updated,"%Y-%m-%dT%TZ")),'') as updated, IFNULL(DATE_FORMAT(media.created,"%Y-%m-%dT%TZ"),'') as created INTO OUTFILE '/var/tmp/images.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from media join mediarepresentation as rep on (media.id = rep.media_id) join mediarepresentationpart as part on (rep.id = part.representation_id) left join AgentBase as artist on (media.artist_id = artist.id) left join descriptionelementbase_media as deb_media on (media.id = deb_media.media_id) left join descriptionelementbase as element on (element.id = deb_media.DescriptionElementBase_id) left join DescriptionBase as description on (element.indescription_id = description.id) left join taxonbase as taxon on (description.taxon_fk = taxon.id);
      </sql>
    </changeSet>
    <changeSet author="ben" id="2011-12-20_07">
        <comment>Export the references</comment>
        <sql>
            select IFNULL(taxon.lsid_lsid,'') as id, IF(ref.updated is NULL, DATE_FORMAT(ref.created,"%Y-%m-%dT%TZ"),DATE_FORMAT(ref.updated,"%Y-%m-%dT%TZ")) as updated, DATE_FORMAT(ref.created,"%Y-%m-%dT%TZ") as created, IFNULL(IF(ref.uuid IS NULL,NULL,concat('http://www.cate-araceae.org/reference/',ref.uuid)),'') as identifier, ifnull(ref.titleCache,'') as bibliographicCitation, 'publication' as type, ifnull(ref.title,'') as title, REPLACE(REPLACE(IFNULL(ref.referenceAbstract,''),'\r\n','\n'),'\n',' ') as abstract, ifnull(substr(ref.datepublished_start,1,4),'') as date,ifnull(inref.title,'') as source, ifnull(authors.titleCache,'') as creator INTO OUTFILE '/var/tmp/reference.txt' FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' from reference as ref left join reference as inref on (ref.inreference_id= inref.id) join agentbase as authors on (ref.authorTeam_id = authors.id) join originalsourcebase as source on (source.citation_id = ref.id) join descriptionelementbase as element on (source.sourcedObj_id = element.id and source.sourcedObj_type = 'eu.etaxonomy.cdm.model.description.TextData') join descriptionbase as description on (element.indescription_id = description.id) join taxonbase as taxon on (taxon.id = description.taxon_fk);
        </sql>
    </changeSet>
</databaseChangeLog>
