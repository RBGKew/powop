<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <context:property-placeholder
    ignore-resource-not-found="true"
    location="classpath:META-INF/spring/application.properties"/>

  <context:annotation-config />
  <context:component-scan base-package="org.powo">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    <context:exclude-filter type="assignable" expression="org.powo.api.JobListService" />
    <context:exclude-filter type="assignable" expression="org.powo.api.JobConfigurationService" />
    <context:exclude-filter type="assignable" expression="org.powo.model.validators.JobListValidator" />
  </context:component-scan>

  <tx:annotation-driven />

  <bean name="customObjectMapper" class="org.powo.model.marshall.json.CustomObjectMapperFactory">
    <property name="referenceService" ref="referenceServiceImpl" />
    <property name="taxonService" ref="taxonServiceImpl" />
    <property name="imageService" ref="imageServiceImpl" />
    <property name="organisationService" ref="organisationServiceImpl" />
  </bean>

  <bean name="transactionManager"
    class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="solrIndexingInterceptor" class="org.powo.persistence.hibernate.SolrIndexingInterceptor">
    <property name="solrClient" ref="solrClient"/>
  </bean>

  <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>WEB-INF/i18n/messages</value>
        <value>WEB-INF/i18n/application</value>
      </list>
    </property>
    <property name="useCodeAsDefaultMessage" value="true" />
  </bean>

  <beans profile="default">
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" depends-on="springLiquibase">
      <property name="dataSource" ref="dataSource" />
      <property name="hibernateProperties">
        <value>
          hibernate.hbm2ddl.auto=validate
          hibernate.dialect=${hibernate.dialect}
          hibernate.validator.autoregister_listeners=false
          hibernate.cache.provider_configuration_file_resource_path=${ehcache.config.location}
          hibernate.default_schema=${liquibase.default.schema.name}
        </value>
      </property>
      <property name="annotatedClasses">
        <list>
          <value>org.powo.model.Identifier</value>
          <value>org.powo.model.Identification</value>
          <value>org.powo.model.Annotation</value>
          <value>org.powo.model.Distribution</value>
          <value>org.powo.model.Description</value>
          <value>org.powo.model.Image</value>
          <value>org.powo.model.JobConfiguration</value>
          <value>org.powo.model.JobList</value>
          <value>org.powo.model.MeasurementOrFact</value>
          <value>org.powo.model.Reference</value>
          <value>org.powo.model.Taxon</value>
          <value>org.powo.model.TypeAndSpecimen</value>
          <value>org.powo.model.VernacularName</value>
          <value>org.powo.model.registry.Resource</value>
          <value>org.powo.model.registry.Organisation</value>
          <value>org.powo.model.Place</value>
          <value>org.powo.model.Concept</value>
        </list>
      </property>
      <property name="entityInterceptor" ref="solrIndexingInterceptor"/>
      <property name="annotatedPackages" value="org.powo.model"/>
    </bean>

    <bean id="solrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
      <constructor-arg value="${solr.url}"/>
    </bean>

    <bean id="springLiquibase" class="liquibase.integration.spring.SpringLiquibase">
      <property name="dataSource" ref="liquibaseDataSource" />
      <property name="changeLog" value="classpath:${liquibase.changelog}" />
      <property name="dropFirst" value="${liquibase.drop.database.first}"/>
      <property name="defaultSchema" value="${liquibase.default.schema.name}"/>
    </bean>

    <bean id="liquibaseDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver.classname}" />
      <property name="url" value="${jdbc.driver.url}" />
      <property name="username" value="${jdbc.driver.username}" />
      <property name="password" value="${jdbc.driver.password}" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver.classname}" />
      <property name="url" value="${jdbc.driver.url}" />
      <property name="username" value="${jdbc.driver.username}" />
      <property name="password" value="${jdbc.driver.password}" />
      <property name="validationQuery" value="SELECT 1" />
    </bean>
  </beans>
</beans>
