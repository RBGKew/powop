<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>powo</artifactId>
    <groupId>org.powo</groupId>
    <version>2.0.0</version>
  </parent>
  <artifactId>powo-static</artifactId>
  <name>powo static files</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <plugins>
      <!-- Disable producing JAR and tests JAR. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Skip default deploy stuff, we move files around manually -->
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <executions>
          <execution>
            <id>default-site</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-deploy</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>jar</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Copy static resources into target/static/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>static.output.dir</id>
            <phase>process-resources</phase>
            <configuration>
              <tasks>
                <delete includeEmptyDirs="true" quiet="true">
                  <fileset dir="${project.build.directory}/static" includes="**/*" />
                </delete>

                <mkdir dir="${project.build.directory}/static/js/" />
                <mkdir dir="${project.build.directory}/static/css/" />
                <mkdir dir="${project.build.directory}/static/tiles/" />

                <copy todir="${project.build.directory}/static/img">
                  <fileset dir="${basedir}/src/frontend/img" includes="**/*" />
                </copy>
                <copy todir="${project.build.directory}/static/tiles">
                  <fileset dir="${basedir}/src/main/tiles/" includes="**/*" />
                </copy>
                <copy todir="${project.build.directory}/static/js">
                  <fileset dir="${basedir}/src/frontend/js" includes="**/*" />
                </copy>
                <copy todir="${project.build.directory}/static/fonts">
                  <fileset dir="${basedir}/src/frontend/fonts" includes="**/*" />
                </copy>
                <copy todir="${project.build.directory}/static/css">
                  <fileset dir="${basedir}/src/frontend/css" includes="**/*" />
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build apache container with bundled assets -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.11</version>
        <configuration>
          <imageName>${docker.registry}apache</imageName>
          <dockerDirectory>${project.basedir}/docker</dockerDirectory>
          <forceTags>true</forceTags>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>static/</include>
            </resource>
          </resources>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>tag-image</id>
            <phase>package</phase>
            <goals>
              <goal>tag</goal>
            </goals>
            <configuration>
              <image>${docker.registry}apache</image>
              <newName>${docker.registry}apache:${project.version}-${buildNumber}</newName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.3,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
